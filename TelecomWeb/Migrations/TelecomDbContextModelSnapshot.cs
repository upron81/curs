// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TelecomWeb.Models;

#nullable disable

namespace TelecomWeb.Migrations
{
    [DbContext(typeof(TelecomDbContext))]
    partial class TelecomDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Cyrillic_General_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TelecomWeb.Models.Call", b =>
                {
                    b.Property<int>("CallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CallID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CallId"));

                    b.Property<DateTime>("CallDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CallDuration")
                        .HasColumnType("int");

                    b.Property<int>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("ContractID");

                    b.HasKey("CallId")
                        .HasName("PK__Calls__5180CF8A3D2D2ED2");

                    b.HasIndex("ContractId");

                    b.ToTable("Calls");
                });

            modelBuilder.Entity("TelecomWeb.Models.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ContractID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractId"));

                    b.Property<DateOnly>("ContractDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("ContractEndDate")
                        .HasColumnType("date");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("StaffID");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int")
                        .HasColumnName("SubscriberID");

                    b.Property<int>("TariffPlanId")
                        .HasColumnType("int")
                        .HasColumnName("TariffPlanID");

                    b.HasKey("ContractId")
                        .HasName("PK__Contract__C90D34095C346A02");

                    b.HasIndex("StaffId");

                    b.HasIndex("SubscriberId");

                    b.HasIndex("TariffPlanId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("TelecomWeb.Models.ContractCall", b =>
                {
                    b.Property<DateTime>("CallDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CallDuration")
                        .HasColumnType("int");

                    b.Property<int>("CallId")
                        .HasColumnType("int")
                        .HasColumnName("CallID");

                    b.Property<int>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("ContractID");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.ToTable((string)null);

                    b.ToView("ContractCalls", (string)null);
                });

            modelBuilder.Entity("TelecomWeb.Models.ContractInternetUsage", b =>
                {
                    b.Property<int>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("ContractID");

                    b.Property<decimal>("DataReceivedMb")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("DataReceivedMB");

                    b.Property<decimal>("DataSentMb")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("DataSentMB");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UsageDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UsageId")
                        .HasColumnType("int")
                        .HasColumnName("UsageID");

                    b.ToTable((string)null);

                    b.ToView("ContractInternetUsage", (string)null);
                });

            modelBuilder.Entity("TelecomWeb.Models.ContractMessage", b =>
                {
                    b.Property<int>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("ContractID");

                    b.Property<bool>("IsMms")
                        .HasColumnType("bit")
                        .HasColumnName("IsMMS");

                    b.Property<DateTime>("MessageDate")
                        .HasColumnType("datetime");

                    b.Property<int>("MessageId")
                        .HasColumnType("int")
                        .HasColumnName("MessageID");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.ToTable((string)null);

                    b.ToView("ContractMessages", (string)null);
                });

            modelBuilder.Entity("TelecomWeb.Models.EmployeeInfo", b =>
                {
                    b.Property<string>("Education")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("StaffID");

                    b.ToTable((string)null);

                    b.ToView("EmployeeInfo", (string)null);
                });

            modelBuilder.Entity("TelecomWeb.Models.InternetUsage", b =>
                {
                    b.Property<int>("UsageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsageId"));

                    b.Property<int>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("ContractID");

                    b.Property<decimal>("DataReceivedMb")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("DataReceivedMB");

                    b.Property<decimal>("DataSentMb")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("DataSentMB");

                    b.Property<DateTime>("UsageDate")
                        .HasColumnType("datetime");

                    b.HasKey("UsageId")
                        .HasName("PK__Internet__29B197C0F4400AED");

                    b.HasIndex("ContractId");

                    b.ToTable("InternetUsage", (string)null);
                });

            modelBuilder.Entity("TelecomWeb.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MessageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<int>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("ContractID");

                    b.Property<bool>("IsMms")
                        .HasColumnType("bit")
                        .HasColumnName("IsMMS");

                    b.Property<DateTime>("MessageDate")
                        .HasColumnType("datetime");

                    b.HasKey("MessageId")
                        .HasName("PK__Messages__C87C037C0167DB96");

                    b.HasIndex("ContractId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("TelecomWeb.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StaffID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<string>("Education")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int")
                        .HasColumnName("PositionID");

                    b.HasKey("StaffId")
                        .HasName("PK__Staff__96D4AAF7835BD125");

                    b.HasIndex("PositionId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("TelecomWeb.Models.StaffPosition", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PositionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"));

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PositionId")
                        .HasName("PK__StaffPos__60BB9A59D4D3AD5C");

                    b.ToTable("StaffPosition", (string)null);
                });

            modelBuilder.Entity("TelecomWeb.Models.Subscriber", b =>
                {
                    b.Property<int>("SubscriberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubscriberID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriberId"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("HomeAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PassportData")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SubscriberId")
                        .HasName("PK__Subscrib__7DFEB634B3799F70");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("TelecomWeb.Models.SubscriberInfo", b =>
                {
                    b.Property<DateOnly>("ContractDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("ContractEndDate")
                        .HasColumnType("date");

                    b.Property<int>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("ContractID");

                    b.Property<string>("HomeAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PassportData")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SubscriberFullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int")
                        .HasColumnName("SubscriberID");

                    b.Property<string>("TariffName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToTable((string)null);

                    b.ToView("SubscriberInfo", (string)null);
                });

            modelBuilder.Entity("TelecomWeb.Models.TariffPlan", b =>
                {
                    b.Property<int>("TariffPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TariffPlanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TariffPlanId"));

                    b.Property<decimal>("DataRatePerMb")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("DataRatePerMB");

                    b.Property<decimal>("InternationalCallRate")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<bool>("IsPerSecond")
                        .HasColumnType("bit");

                    b.Property<decimal>("LocalCallRate")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("LongDistanceCallRate")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("MmsRate")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("SmsRate")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("SubscriptionFee")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("TariffName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TariffPlanId")
                        .HasName("PK__TariffPl__29A9282A1C614268");

                    b.ToTable("TariffPlans");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TelecomWeb.Models.Call", b =>
                {
                    b.HasOne("TelecomWeb.Models.Contract", "Contract")
                        .WithMany("Calls")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Calls__ContractI__14B10FFA");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("TelecomWeb.Models.Contract", b =>
                {
                    b.HasOne("TelecomWeb.Models.Staff", "Staff")
                        .WithMany("Contracts")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Contracts__Staff__11D4A34F");

                    b.HasOne("TelecomWeb.Models.Subscriber", "Subscriber")
                        .WithMany("Contracts")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Contracts__Subsc__0FEC5ADD");

                    b.HasOne("TelecomWeb.Models.TariffPlan", "TariffPlan")
                        .WithMany("Contracts")
                        .HasForeignKey("TariffPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Contracts__Tarif__10E07F16");

                    b.Navigation("Staff");

                    b.Navigation("Subscriber");

                    b.Navigation("TariffPlan");
                });

            modelBuilder.Entity("TelecomWeb.Models.InternetUsage", b =>
                {
                    b.HasOne("TelecomWeb.Models.Contract", "Contract")
                        .WithMany("InternetUsages")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__InternetU__Contr__1A69E950");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("TelecomWeb.Models.Message", b =>
                {
                    b.HasOne("TelecomWeb.Models.Contract", "Contract")
                        .WithMany("Messages")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Messages__Contra__178D7CA5");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("TelecomWeb.Models.Staff", b =>
                {
                    b.HasOne("TelecomWeb.Models.StaffPosition", "Position")
                        .WithMany("Staff")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Staff__PositionI__093F5D4E");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("TelecomWeb.Models.Contract", b =>
                {
                    b.Navigation("Calls");

                    b.Navigation("InternetUsages");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("TelecomWeb.Models.Staff", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("TelecomWeb.Models.StaffPosition", b =>
                {
                    b.Navigation("Staff");
                });

            modelBuilder.Entity("TelecomWeb.Models.Subscriber", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("TelecomWeb.Models.TariffPlan", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
