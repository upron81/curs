@model PaginatedList<TelecomWeb.Models.Subscriber>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<form method="get" asp-action="Index" class="form-inline mb-3">
    <div class="form-group mr-2">
        <input type="text" name="nameSearch" value="@ViewData["NameFilter"]" class="form-control" placeholder="Search by name" />
    </div>
    <div class="form-group mr-2">
        <input type="text" name="addressSearch" value="@ViewData["AddressFilter"]" class="form-control" placeholder="Search by address" />
    </div>
    <div class="form-group mr-2">
        <input type="text" name="passportSearch" value="@ViewData["PassportFilter"]" class="form-control" placeholder="Search by passport data" />
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
</form>

<p>
    <a asp-action="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.First().FullName)</th>
            <th>@Html.DisplayNameFor(model => model.First().HomeAddress)</th>
            <th>@Html.DisplayNameFor(model => model.First().PassportData)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                <td>@Html.DisplayFor(modelItem => item.HomeAddress)</td>
                <td>@Html.DisplayFor(modelItem => item.PassportData)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.SubscriberId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.SubscriberId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.SubscriberId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="text-center">
    <ul class="pagination">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-nameSearch="@ViewData["NameFilter"]" asp-route-addressSearch="@ViewData["AddressFilter"]" asp-route-passportSearch="@ViewData["PassportFilter"]">Previous</a>
        </li>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-nameSearch="@ViewData["NameFilter"]" asp-route-addressSearch="@ViewData["AddressFilter"]" asp-route-passportSearch="@ViewData["PassportFilter"]">@i</a>
            </li>
        }
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-nameSearch="@ViewData["NameFilter"]" asp-route-addressSearch="@ViewData["AddressFilter"]" asp-route-passportSearch="@ViewData["PassportFilter"]">Next</a>
        </li>
    </ul>
</div>
